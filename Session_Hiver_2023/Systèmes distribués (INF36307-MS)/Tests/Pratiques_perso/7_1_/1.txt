Stéphane 9:25 AM
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: plaintext
  - port: 9999
    name: jmx
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: "kafka"
  replicas: 3
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.13-2.8.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9999
          name: jmx
        env:
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: BROKER_ID_COMMAND
            value: "hostname | cut -d'-' -f2"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-service:2181"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://:9092"
          - name: KAFKA_JMX_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=127.0.0.1"
          - name: JMX_PORT
            value: "9999"
Stéphane  to  Everyone 9:29 AM
env:
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: BROKER_ID_COMMAND
            value: "hostname | cut -d'-' -f2"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-service:2181"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://:9092"
          - name: KAFKA_JMX_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=127.0.0.1"
          - name: JMX_PORT
            value: "9999"
Stéphane  to  Everyone 9:32 AM
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper-service
  name: zookeeper-service
spec:
  type: NodePort
  ports:
  - name: zookeeper-port
    port: 2181
    targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - image: library/zookeeper:3.8.1
        imagePullPolicy: IfNotPresent
        name: zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOO_MY_ID
          value: "1"
Stéphane  to  Everyone 9:37 AM
kind: Service
apiVersion: v1
metadata:
  name: kafka-manager
spec:
  type: NodePort
  selector:
    app: kafka-manager
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-manager
  template:
    metadata:
      labels:
        app: kafka-manager
    spec:
      containers:
      - name: kafka-manager
        image: sheepkiller/kafka-manager@sha256:615f3b99d38aba2d5fdb3fb750a5990ba9260c8fb3fd29c7e776e8c150518b78
        ports:
        - containerPort: 9000
        env:
        - name: ZK_HOSTS
          value: "zookeeper-service:2181"
Stéphane  to  Everyone 9:39 AM
minikube service kafka-manager
Stéphane  to  Everyone 9:41 AM
zookeeper-service:2181
Stéphane  to  Everyone 9:48 AM
kubectl run -ti --image=gcr.io/google_containers/kubernetes-kafka:1.0-10.2.1 consume --restart=Never --rm -- kafka-console-consumer.sh --topic uqar --bootstrap-server kafka:9092
Stéphane 9:49 AM
kubectl run -ti --image=gcr.io/google_containers/kubernetes-kafka:1.0-10.2.1 produce --restart=Never --rm -- kafka-console-producer.sh --topic uqar --broker-list kafka-0.kafka.default.svc.cluster.local:9092,kafka-1.kafka.default.svc.cluster.local:9092,kafka-2.kafka.default.svc.cluster.local:9092 done;

------------------------------------------------------------------------------------------------------------------------------