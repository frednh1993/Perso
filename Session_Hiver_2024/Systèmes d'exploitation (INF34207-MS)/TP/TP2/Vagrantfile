Vagrant.configure("2") do |config|

  $script = <<-'SCRIPT'
  sudo apt-get update
  sudo apt-get --assume-yes install mysql-server

  cd /etc/mysql/
  echo '[mysqld]' |sudo tee -a mysql.cnf
  echo 'bind-address = 0.0.0.0' |sudo tee -a mysql.cnf

  sudo ufw allow 3306

  sudo systemctl restart mysql

  sudo mysql -e "CREATE USER IF NOT EXISTS 'test'@'%' IDENTIFIED BY 'test';"
  sudo mysql -e "GRANT ALL PRIVILEGES ON . TO 'test'@'%' WITH GRANT OPTION;"
  sudo mysql -e "FLUSH PRIVILEGES;"
  sudo mysql -e "CREATE DATABASE IF NOT EXISTS test_bd;USE test_bd;CREATE TABLE IF NOT EXISTS test_table (id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(50),age INT);INSERT INTO test_table (name, age) VALUES ('John', 25),('Alice', 30),('Bob', 28);"
  SCRIPT


  $script2 = <<-'SCRIPT'
  sudo apt-get update

    # Install Python and Flask
  sudo apt-get install python3
  sudo apt-get -y install python3-pip
  sudo pip3 install Flask

   # Location of the api in "home" folder.
  cd /home
  echo -e 'from flask import Flask\napp = Flask(__name__)\n@app.route("/")\ndef hello_world():\n\treturn "<p>Hello, World!</p>"\nif __name__ == "__main__":\n\tapp.run(debug=False, host="0.0.0.0")' > api.py

  # Run the script.
  # sudo pip3 install uwsgi
  # uwsgi --socket 0.0.0.0:8000 --protocol=http -w api:app
  # sudo python3 api.py &
  sudo python3 api.py
  SCRIPT

  
  # config.vm.box = "generic/rhel9"
  # # config.vm.network "private_network", ip: "192.168.2.140", subnet: "255.255.255.0"
  # config.vm.network "forwarded_port", guest: 5000, host: 8080
  
  # config.vm.synced_folder "src", "/vagrant"
  # config.vm.provision "shell", path: "src/provision.sh", privileged: false
  # #config.vm.provision "shell", path: "src/api/start_api.sh", privileged: false

  # # DB
  config.vm.define "db" do |db|
    db.vm.box = "hashicorp/bionic64"
    db.vm.box_version = "1.0.282"
    db.vm.network "forwarded_port", guest: 3306, host: 3308
    #db.vm.network "private_network", ip: "192.168.56.2"
    # db.vm.provider "virtualbox" do |vb|
    #   vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
    #   vb.name = "vm-db"
    # end
    db.vm.provision "shell", inline: $script
  end

  
  # # API
  # config.vm.define "api" do |api|
  #   api.vm.box = "hashicorp/bionic64"
  #   api.vm.box_version = "1.0.282"
  #   api.vm.network "private_network", ip: "192.168.56.3"
  #   api.vm.provider "virtualbox" do |vb|
  #     vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
  #     vb.name = "vm-api"
  #   end
  #   api.vm.provision "shell", inline: $script2
  # end


  # Load balancer
  config.vm.define "lb" do |lb|
    lb.vm.box = "hashicorp/bionic64"
    lb.vm.box_version = "1.0.282"
    lb.vm.network "private_network", ip: "192.168.56.4"
    lb.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
      vb.name = "vm-db"
    end
    db.vm.provision "shell", inline: $script3
  end

end