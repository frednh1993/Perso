Vagrant.configure("2") do |config|
  
  $script = <<-'SCRIPT'
  sudo apt-get update

    # Install MariaDB server package
  sudo apt-get install -y mariadb-server

  # cd /etc/mysql/mariadb.conf.d/
  # sudo sed -i "29s/.*/bind-address    = 0.0.0.0/" "50-server.cnf"

   # Start MariaDB service
  sudo systemctl start mariadb

  # Enable MariaDB to start on boot
  sudo systemctl enable mariadb

  # Check MariaDB service status
  sudo systemctl status mariadb
  SCRIPT


  $script2 = <<-'SCRIPT'
  sudo apt-get update

  # Install nginx package
  sudo apt-get -y install nginx

  # Rename nginx.conf original and create an other one.
  cd /etc/nginx
  sudo mv nginx.conf nginx_org.conf

  echo "  user www-data;
  worker_processes auto;
  error_log  /var/log/nginx/error.log notice;
  pid        /var/run/nginx.pid;
  events {
    worker_connections  1024;
  }

  http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream; 
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] \"\$request\" '
                      '\$status \$body_bytes_sent \"\$http_referer\" '
                      '\"\$http_user_agent\" \"\$http_x_forwarded_for\"'; 
  
  access_log  /var/log/nginx/access.log  main; 
  sendfile        on;
  keepalive_timeout  65; 
  include /etc/nginx/conf.d/*.conf;
  }" > nginx.conf


  # Add files lb.conf and web.conf.
  cd /etc/nginx/conf.d

  echo "  upstream backend_servers {
    zone backend_server_zone 64k;
    server 127.0.0.1:9001;
    server 127.0.0.1:9002;
    server 127.0.0.1:9003;
  }

  server {
    listen 80;
    server_name  www.example.com;
    
    proxy_set_header Host \$host;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP  \$remote_addr;

    location / {
    proxy_pass http://backend_servers/;
  }
    
    
}" > lb.conf

  echo "  server {
    listen       9001;
    index  index.html;
    add_header Custom-Header \"Application 1\";
   
    location / {
      root   /opt/services/App1;
    }
  }

  server {
    listen       9002;
    index  index.html;
    add_header Custom-Header \"Application 2\";

    location / {
      root   /opt/services/App2;
    }
  }

  server {
    
    listen       9003;
    index  index.html;
    add_header Custom-Header \"Application 3\";

    location / {
      root   /opt/services/App3;
    }
  }" > web.conf


  # Add files services/App1 to App3 in /opt.
  cd /opt
  sudo mkdir services

  cd services
  sudo mkdir App1
  sudo mkdir App2
  sudo mkdir App3

  cd App1
  echo "  <!DOCTYPE html>
  <html>

  <head>
  <title>Test app 1</title>
  </head>

  <body>
  <h1>Test app 1</h1>
  </body>

  </html>" > index.html
  cd ..

  cd App2
  echo "  <!DOCTYPE html>
  <html>

  <head>
  <title>Test app 2</title>
  </head>

  <body>
  <h1>Test app 2</h1>
  </body>

  </html>" > index.html
  cd ..

  cd App3
  echo "  <!DOCTYPE html>
  <html>

  <head>
  <title>Test app 3</title>
  </head>

  <body>
  <h1>Test app 3</h1>
  </body>

  </html>" > index.html
  cd ..

  # Start nginx.
  sudo nginx -s reload

  SCRIPT


  $script3 = <<-'SCRIPT'
  sudo apt-get update

  # Install Python and Flask
  sudo apt-get install python3
  sudo apt-get -y install python3-pip
  sudo pip3 install Flask

   # Location of the api in "home" folder.
  cd /home
  echo -e 'from flask import Flask\napp = Flask(__name__)\n@app.route("/")\ndef hello_world():\n\treturn "<p>Hello, World!</p>"\nif __name__ == "__main__":\n\tapp.run(debug=False, host="0.0.0.0")' > api.py

  # Run the script.
  # sudo pip3 install uwsgi
  # uwsgi --socket 0.0.0.0:8000 --protocol=http -w api:app
  # sudo python3 api.py &
  sudo python3 api.py
  SCRIPT

  
  # DB
  config.vm.define "db" do |db|
    db.vm.box = "hashicorp/bionic64"
    db.vm.box_version = "1.0.282"
    db.vm.network "private_network", ip: "192.168.56.2"
    db.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
      vb.name = "vm-db"
    end
    db.vm.provision "shell", inline: $script
  end


  # # Load balancer
  # config.vm.define "lb" do |lb|
  #   lb.vm.box = "hashicorp/bionic64"
  #   lb.vm.box_version = "1.0.282"
  #   lb.vm.network "private_network", ip: "192.168.56.4"
  #   lb.vm.provider "virtualbox" do |vb|
  #     vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
  #     vb.name = "vm-lb"
  #   end
  #   lb.vm.provision "shell", inline: $script2
  # end


  # # API
  # config.vm.define "api" do |api|
  #   api.vm.box = "hashicorp/bionic64"
  #   api.vm.box_version = "1.0.282"
  #   api.vm.network "private_network", ip: "192.168.56.3"
  #   api.vm.provider "virtualbox" do |vb|
  #     vb.customize ["modifyvm", :id, "--memory", 1024 * 4]
  #     vb.name = "vm-api"
  #   end
  #   api.vm.provision "shell", inline: $script2
  # end

end



